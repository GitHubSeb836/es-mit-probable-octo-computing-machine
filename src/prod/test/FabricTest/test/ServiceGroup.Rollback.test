set DummyPLBEnabled true
set NamingOperationTimeout 60
set NamingOperationRetryTimeout 120
cleantest
votes 10
cmservice 0 0
namingservice 1 2 2

+10
+20
+30
verify
+40
+50
+60
verify

##########################################################################
######## Online Rollback                                          ########
##########################################################################
createname fabric:/servicegroup4

# test explicetly rolls back atomic group
# checks that the rollback count on change role to none is 1

# there are two atomic groups in flight, one per member

# testservice assumes one secondary when 'rollback' is set

createservicegroup \
    fabric:/servicegroup4 SGStatefulServiceFactory y 1 2 \
    2 \
    fabric:/servicegroup4#test1 SGStatefulServiceECS \
    fabric:/servicegroup4#test2 SGStatefulServiceECS \
    init fabric:/servicegroup4#test1 \
        atomicgroupstateprovider \
        replicateatomic \
        rollback \
        onchangerole.none.assert.rollbackcount=1 \
    endinit \
    init fabric:/servicegroup4#test2 \
        atomicgroupstateprovider \
        replicateatomic \
        rollback \
        onchangerole.none.assert.rollbackcount=1 \
    endinit \
    persist \
    minreplicasetsize=1

verify
!waitforstate FM.Replica.Role.fabric:/servicegroup4.60 Primary
!waitforstate FM.Replica.Role.fabric:/servicegroup4.50 Secondary

!pause,30

deleteservicegroup fabric:/servicegroup4

!pause,5

deletename fabric:/servicegroup4

verify

##########################################################################
######## Rollback on Close                                        ########
##########################################################################
createname fabric:/servicegroup0

# checks that the rollback count on close is 1
# -> rollback on Close via Remove node this will prevent ChangeRole from being called
# assert that current role on close is primary or secondary to ensure the rollback happens on close

# there are two atomic groups in flight, one per member

createservicegroup \
    fabric:/servicegroup0 SGStatefulServiceFactory y 1 2 \
    2 \
    fabric:/servicegroup0#test1 SGStatefulService \
    fabric:/servicegroup0#test2 SGStatefulService \
    init fabric:/servicegroup0#test1 \
        atomicgroupstateprovider \
        replicateatomic \
        nocommit \
        onclose.assert.rollbackcount=1 \
        onclose.assert.roleisprimaryorsecondary \
    endinit \
    init fabric:/servicegroup0#test2 \
        atomicgroupstateprovider \
        replicateatomic \
        nocommit \
        onclose.assert.rollbackcount=1 \
        onclose.assert.roleisprimaryorsecondary \
    endinit \
    persist \
    minreplicasetsize=1

verify
!waitforstate FM.Replica.Role.fabric:/servicegroup0.60 Primary
!waitforstate FM.Replica.Role.fabric:/servicegroup0.50 Secondary

!pause,5

# when we drop the primary (-60) a new primary may be built on 40 (or lower) before 
# deleteservice happens, in this case we need to skip validation on the new primary

setsignal 40 fabric:/servicegroup0#test1 servicegroup.skipvalidation
setsignal 40 fabric:/servicegroup0#test2 servicegroup.skipvalidation
setsignal 30 fabric:/servicegroup0#test1 servicegroup.skipvalidation
setsignal 30 fabric:/servicegroup0#test2 servicegroup.skipvalidation
setsignal 20 fabric:/servicegroup0#test1 servicegroup.skipvalidation
setsignal 20 fabric:/servicegroup0#test2 servicegroup.skipvalidation
setsignal 10 fabric:/servicegroup0#test1 servicegroup.skipvalidation
setsignal 10 fabric:/servicegroup0#test2 servicegroup.skipvalidation

# closes the secondary replica without going through change role => None
-50 removedata

# closes the primary replica without going through change role => None

-60 removedata

!pause,5

deleteservicegroup fabric:/servicegroup0 errors=Timeout

!pause,5

resetsignal 40 fabric:/servicegroup0#test1 servicegroup.skipvalidation
resetsignal 40 fabric:/servicegroup0#test2 servicegroup.skipvalidation
resetsignal 30 fabric:/servicegroup0#test1 servicegroup.skipvalidation
resetsignal 30 fabric:/servicegroup0#test2 servicegroup.skipvalidation
resetsignal 20 fabric:/servicegroup0#test1 servicegroup.skipvalidation
resetsignal 20 fabric:/servicegroup0#test2 servicegroup.skipvalidation
resetsignal 10 fabric:/servicegroup0#test1 servicegroup.skipvalidation
resetsignal 10 fabric:/servicegroup0#test2 servicegroup.skipvalidation

#the service group member may be opened and closed 
#as part of node restart/replica up during nodes coming back up
#skip validation
setsignal 50 fabric:/servicegroup0#test1 servicegroup.skipvalidation
setsignal 50 fabric:/servicegroup0#test2 servicegroup.skipvalidation

setsignal 60 fabric:/servicegroup0#test1 servicegroup.skipvalidation
setsignal 60 fabric:/servicegroup0#test2 servicegroup.skipvalidation

nodestateremoved 50
nodestateremoved 60
deleteservicegroup fabric:/servicegroup0 errors=UserServiceGroupNotFound

+50
+60
verify

##########################################################################
######## Rollback (2 replicas) on ChangeRole                      ########
##########################################################################
createname fabric:/servicegroup1

# checks that the rollback count on close is 4
# -> rollback on UpdateEpoch (swapprimary)
# -> rollback on Close (deleteservicegroup)

# there are two atomic groups in flight
# -> primary on 60 creates atomic group and replicates one operation (inflight during swapprimary)
# -> swapprimary
# -> primary on 50 creates atomic group and replicates one operation (inflight during close)

createservicegroup \
    fabric:/servicegroup1 SGStatefulServiceFactory y 1 2 \
    1 \
    fabric:/servicegroup1#test1 SGStatefulService \
    init fabric:/servicegroup1#test1 \
        atomicgroupstateprovider \
        replicateatomic \
        nocommit \
        onclose.assert.rollbackcount=4 \
        onclose.assert.previousEpochLastLsn=3 \
    endinit \
    persist \
    minreplicasetsize=1

verify
!waitforstate FM.Replica.Role.fabric:/servicegroup1.60 Primary
!waitforstate FM.Replica.Role.fabric:/servicegroup1.50 Secondary

!pause,5

swapprimary fabric:/servicegroup1 60 50

verify
!waitforstate FM.Replica.Role.fabric:/servicegroup1.60 Secondary
!waitforstate FM.Replica.Role.fabric:/servicegroup1.50 Primary

!pause,10

swapprimary fabric:/servicegroup1 50 60

verify
!waitforstate FM.Replica.Role.fabric:/servicegroup1.60 Primary
!waitforstate FM.Replica.Role.fabric:/servicegroup1.50 Secondary

!pause,10

swapprimary fabric:/servicegroup1 60 50

verify
!waitforstate FM.Replica.Role.fabric:/servicegroup1.60 Secondary
!waitforstate FM.Replica.Role.fabric:/servicegroup1.50 Primary

!pause,10

deleteservicegroup fabric:/servicegroup1

!pause,5

deletename fabric:/servicegroup1

verify

##########################################################################
######## Rollback (3 replicas) on ChangeRole                      ########
##########################################################################
createname fabric:/servicegroup2

# checks that the rollback count on close is 2
# -> rollback on UpdateEpoch (swapprimary)
# -> rollback on Close (deleteservicegroup)

# there are two atomic groups in flight
# -> primary on 60 creates atomic group and replicates one operation (inflight during swapprimary)
# -> swapprimary
# -> primary on 50 creates atomic group and replicates one operation (inflight during close)

createservicegroup \
    fabric:/servicegroup2 SGStatefulServiceFactory y 1 3 \
    1 \
    fabric:/servicegroup2#test1 SGStatefulService \
    init fabric:/servicegroup2#test1 \
        atomicgroupstateprovider \
        replicateatomic \
        nocommit \
        onclose.assert.rollbackcount=2 \
    endinit \
    persist \
    minreplicasetsize=2

verify
!waitforstate FM.Replica.Role.fabric:/servicegroup2.60 Primary
!waitforstate FM.Replica.Role.fabric:/servicegroup2.50 Secondary
!waitforstate FM.Replica.Role.fabric:/servicegroup2.40 Secondary

!pause,5

swapprimary fabric:/servicegroup2 60 50

verify
!waitforstate FM.Replica.Role.fabric:/servicegroup2.60 Secondary
!waitforstate FM.Replica.Role.fabric:/servicegroup2.50 Primary
!waitforstate FM.Replica.Role.fabric:/servicegroup2.40 Secondary

!pause,10

deleteservicegroup fabric:/servicegroup2

!pause,5

deletename fabric:/servicegroup2

verify

##########################################################################
######## Rollback on ChangeRole to None                           ########
##########################################################################
createname fabric:/servicegroup3

# checks that the rollback count on change role to none is 1
# -> change role to none is triggered by deleteservicegroup
# assert that change role to none is excercised before close

# there are two atomic groups in flight, one per member

createservicegroup \
    fabric:/servicegroup3 SGStatefulServiceFactory y 1 2 \
    2 \
    fabric:/servicegroup3#test1 SGStatefulService \
    fabric:/servicegroup3#test2 SGStatefulService \
    init fabric:/servicegroup3#test1 \
        atomicgroupstateprovider \
        replicateatomic \
        nocommit \
        onchangerole.none.assert.rollbackcount=1 \
        onchangerole.none.put.rollbackcount=0 \
        onclose.assert.rollbackcount=0 \
    endinit \
    init fabric:/servicegroup3#test2 \
        atomicgroupstateprovider \
        replicateatomic \
        nocommit \
        onchangerole.none.assert.rollbackcount=1 \
        onchangerole.none.put.rollbackcount=0 \
        onclose.assert.rollbackcount=0 \
    endinit \
    persist \
    minreplicasetsize=1

verify
!waitforstate FM.Replica.Role.fabric:/servicegroup3.60 Primary
!waitforstate FM.Replica.Role.fabric:/servicegroup3.50 Secondary

!pause,5

deleteservicegroup fabric:/servicegroup3

!pause,5

deletename fabric:/servicegroup3

verify

!q
