# [owner:v-anatra]
# This test validates proper behavior when MoveParentToFixAffinityViolation is set to true

#####################################################################################################################
#
#   Create three nodes and parent and child service placed on different nodes correlated with affinity.
#   Allow parent to move and set MoveParentToFixAffinityViolationTransitionPercentage to 1.0 
#   - this means that we will always try to move parent replica to fix affinity violation.
#   Due to node capacity parent and child cannot be placed on the same node and they will stay in affinity violation.
#
#####################################################################################################################

votes 10 20 30

set MoveParentToFixAffinityViolation true
set MoveParentToFixAffinityViolationTransitionPercentage 1.0
set LoadBalancingEnabled true
set FaultDomainConstraintPriority 1
set DummyPLBEnabled true
set ConstraintViolationHealthReportLimit 2
set DetailedConstraintViolationHealthReportLimit 4
set SendLoadReportInterval 1
set HealthOperationTimeout 30
set HealthReportSendInterval 0
set HealthReportRetrySendInterval 10
set PeriodicLoadPersistInterval 1
set DeletedReplicaKeepDuration 1

cleantest
cmservice 3 1
namingservice 1 3 2
+10 nodeprops=StringProperty:TestString1,NumericProperty:10.0 cap=CPU:50 fd=fd:/dc0/r0
+20 nodeprops=StringProperty:TestString2,NumericProperty:20.0 cap=CPU:50 fd=fd:/dc0/r1
+30 nodeprops=StringProperty:TestString1,NumericProperty:30.0 cap=CPU:100 fd=fd:/dc1/r0
verify

# Create (parent) service with one partition and one replica
createname fabric:/parent
createservice fabric:/parent TestStoreServiceType y 1 1 metrics=CPU,High,50,50 constraint=NumericProperty<21
!pause 5
gfum
!waitforstate FM.Replica.Role.fabric:/parent.10 NullReplica
!waitforstate FM.Replica.Role.fabric:/parent.20 Primary
!waitforstate FM.Replica.Role.fabric:/parent.30 NullReplica

# Create (child) service with one partition and one replica
createname fabric:/child
createservice fabric:/child TestStoreServiceType y 1 1 metrics=CPU,High,50,50
verify

!waitforstate FM.Replica.Role.fabric:/child.10 NullReplica
!waitforstate FM.Replica.Role.fabric:/child.20 NullReplica
!waitforstate FM.Replica.Role.fabric:/child.30 Primary
verify

# Correlate parent and child service with affinity
updateservice fabric:/child Stateful servicecorrelations=fabric:/parent,affinity

# Check that there is still existing affinity violation - parent and child are not on the same node
!pause 5
gfum
!waitforstate FM.Replica.Role.fabric:/parent.10 NullReplica
!waitforstate FM.Replica.Role.fabric:/parent.20 Primary
!waitforstate FM.Replica.Role.fabric:/parent.30 NullReplica
!waitforstate FM.Replica.Role.fabric:/child.10 NullReplica
!waitforstate FM.Replica.Role.fabric:/child.20 NullReplica
!waitforstate FM.Replica.Role.fabric:/child.30 Primary

# Check that health is in state - warning
queryhealth service servicename=fabric:/child expectedhealthstate=warning

# Allow parent to be placed on any node
updateservice fabric:/parent Stateful constraint=
!pause 5
gfum
!waitforstate FM.Replica.Role.fabric:/parent.10 NullReplica
!waitforstate FM.Replica.Role.fabric:/parent.20 NullReplica
!waitforstate FM.Replica.Role.fabric:/parent.30 Primary
!waitforstate FM.Replica.Role.fabric:/child.10 NullReplica
!waitforstate FM.Replica.Role.fabric:/child.20 NullReplica
!waitforstate FM.Replica.Role.fabric:/child.30 Primary

# System is now in healthy state
queryhealth service servicename=fabric:/child expectedhealthstate=ok

!q