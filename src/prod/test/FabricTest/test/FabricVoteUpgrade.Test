# VoteUpgrade test with scale min mode enable to test the configuration upgrade scenario for fabric for votes

# For all tests with scale min mode the first command needs to be a !setcfg to ensure
# the configuration is correctly set to enable this mode
!setcfg FabricTest.ScaleMinModeEnabled=true

# GlobalFabricVersion needed to be set so that all nodes start up with the correct version
# this also is used to see what the deployed manifest version is
!var CurentFabricCodeVersion Fabric.FileVersion
set GlobalFabricVersion <var.CurentFabricCodeVersion>:V1

# Set votes and system services
cmservice 7 1
namingservice 2 7 1
fmservice 7 1
# Set votes to 10,20,30 initially
votes 10:SeedNode:10001 20:SeedNode:10002 30:SeedNode:10003

cleantest

# Does a makedrop in the test working directory
makedrop

# Setup the cluster manifest with nodes to be deployed
# Support for node properties, capacities, security will be added
# The version of the cluster manifest is the same as the global version
cm.add V1
cm.node V1 10
cm.node V1 20
cm.node V1 30
# Cannot change cluster endpoint during config upgrade so setting it to 10004 straight up
# since 40 will be a seed node after upgrade
cm.node V1 40 clusterendpoint=10004
cm.node V1 50
cm.node V1 60
cm.node V1 70
cm.node V1 80
cm.node V1 90
cm.node V1 100
cm.upload V1
cm.deploy V1

# Add all nodes
+10
+20
+30
+40
+50
+60

verify

# Add multiple adhoc services
createservice fabric:/VolatleSvc TestStoreServiceType y 4 7

verify

createservice fabric:/CalcSvc CalculatorServiceType n 2 5

verify

createservice fabric:/PersistedTestSvc TestPersistedStoreServiceType y 1 3 persist

verify

# Add application
app.add version10 TestApp 1.0
app.clear version10

app.servicepack version10 ServicePackageA version=1.0
app.servicepack version10 ServicePackageB version=1.0

app.servicetypes version10 ServicePackageA ServiceTypeA1 stateful persist
app.servicetypes version10 ServicePackageB ServiceTypeB1 stateful

app.codepack version10 ServicePackageA CodeA1 types=ServiceTypeA1 version=1.0
app.codepack version10 ServicePackageB CodeB1 types=ServiceTypeB1 version=1.0

app.reqservices version10 ServiceA1 ServiceTypeA1 stateful partition=1 replica=3
app.reqservices version10 ServiceB1 ServiceTypeB1 stateful partition=1 replica=3

app.upload version10
provisionapp version10
createapp fabric:/app1 TestApp 1.0

verify

# upgrade to existing version should be a no-op. Just to ensure the cluster version is set
prepareupgradefabric code=<var.CurentFabricCodeVersion>
provisionfabric code=<var.CurentFabricCodeVersion> config=V1
upgradefabric code=<var.CurentFabricCodeVersion> config=V1 Rolling 
verifyupgradefabric

# Verify only 10,20 and 30 are seed
# NOTE: Disabling verification of nodelist query - Merge logic in GetNodeList has been changed to
# use nodeId instead of node name and fabrictest or nodeIdGenerator needs to be fixed to allow
# verification like this to pass - verify NodeName=10,NodeStatus=Up,IsSeedNode=true,ConfigVersion=V1.
query getnodelist NodeName=10
query getnodelist NodeName=20
query getnodelist NodeName=30
query getnodelist NodeName=40

# Deploy V2 version of Manifest with changed votes
votes 10:SeedNode:10001 20:SeedNode:10002 40:SeedNode:10004
cm.add V2
cm.node V2 10
cm.node V2 20
cm.node V2 30 clusterendpoint=10003
cm.node V2 40
cm.node V2 50
cm.node V2 60
cm.node V2 70
cm.node V2 80
cm.node V2 90
cm.node V2 100
cm.upload V2

# Upgrade to V2 version of the manifest which will change the nodes
provisionfabric config=V2
upgradefabric code=<var.CurentFabricCodeVersion> config=V2 Rolling 
verifyupgradefabric

# Verify only 10,20 and 40 are seed
query getnodelist NodeName=10
query getnodelist NodeName=20
query getnodelist NodeName=30
query getnodelist NodeName=40
verify

+70
+80
verify

query getnodelist NodeName=70
query getnodelist NodeName=80

-60
verify
!q
