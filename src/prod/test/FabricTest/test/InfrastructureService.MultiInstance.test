set RunAsPolicyEnabled true

votes 10 20 30 40 50

fmservice 3 1
namingservice 1 3 1
cmservice 3 1

infraservice 3 1 A
infraservice 3 1 B
infraservice 3 1 C

cleantest

set InfrastructureTaskProcessingInterval 2
set NamingOperationTimeout 10
set NamingOperationRetryTimeout 120
set InfrastructureTaskHealthCheckRetryTimeout 20
set InfrastructureTaskHealthCheckStableDuration 4
set HealthReportSendInterval 2
set HealthReportRetrySendInterval 5

set MaxPercentUnhealthyNodes 25

+10 nodeprops=stateless:1,volatile:1,persisted:1
+20 nodeprops=stateless:1,volatile:1,persisted:1
+30 nodeprops=stateless:1,volatile:1,persisted:1
+40
+50

verify

createservice fabric:/stateless CalculatorServiceType n 1 3 constraint=stateless==1
createservice fabric:/volatile TestStoreServiceType y 1 3 constraint=volatile==1
createservice fabric:/persisted TestPersistedStoreServiceType y 1 3 persist constraint=persisted==1

verify

#
# Check for expected errors for invalid target service names
#
infra fakecommand target=baduri error=InvalidNameUri queryerror=InvalidNameUri
infra fakecommand target=fabric: error=InvalidOperation queryerror=InvalidOperation
infra fakecommand target=fabric:/ error=InvalidNameUri queryerror=InvalidNameUri
infra fakecommand target=fabric:/System/NotAnInfrastructureService error=InvalidOperation queryerror=InvalidOperation
infra fakecommand target=fabric:/System/InfrastructureService/NotFound error=ServiceNotFound queryerror=ServiceNotFound

#
# Testcase 1a: single-node restart
#

+60 nodeprops=volatile:1
verify

infra start:TestTask1a:10:restart target=fabric:/System/InfrastructureService/A

!waitforstate FM.UpReplicaCount.10 0 60

-10
-60

+10 nodeprops=stateless:1,volatile:1,persisted:1

# Make sure the FM is stable before infra command, which requires an FM service-to-partition lookup
verify 60 fm

infra finish:TestTask1a target=fabric:/System/InfrastructureService/A

verify

#
# Testcase 1b: single-node relocate
#

+60 nodeprops=volatile:1,persisted:1
verify

infra start:TestTask1b:10:relocate target=fabric:/System/InfrastructureService/B

!waitforstate FM.UpReplicaCount.10 0 60

-10
-60

+10 nodeprops=stateless:1,volatile:1,persisted:1

# Make sure the FM is stable before infra command, which requires an FM service-to-partition lookup
verify 60 fm

infra finish:TestTask1b target=fabric:/System/InfrastructureService/B

verify

#
# Testcase 1c: single-node remove
#

+60 nodeprops=volatile:1,persisted:1
verify

set NamingOperationRetryTimeout 20

infra start:TestTask1c:10:remove target=fabric:/System/InfrastructureService/C error=Timeout

set NamingOperationRetryTimeout 120

!waitforstate FM.UpReplicaCount.10 0 60

-10
-60

# Make sure the FM is stable before infra command, which requires an FM service-to-partition lookup
verify 60 fm

infra finish:TestTask1c target=fabric:/System/InfrastructureService/C

!waitforstate FM.Replica.State.fabric:/stateless.10 Dropped
!waitforstate FM.Replica.State.fabric:/volatile.10 Dropped
!waitforstate FM.Replica.State.fabric:/persisted.10 Dropped

+10 nodeprops=stateless:1,volatile:1,persisted:1
verify

#
# Testcase 1d: remove system service
#

removeinfraservice A
removeinfraservice B
killfmservice primaryOnly

# Wait system service to be deleted
!pause,30

query getsystemserviceslist ApplicationName=fabric:/System verify ServiceName=fabric:/System/InfrastructureService/C,ServiceTypeName=InfrastructureServiceType
query getsystemserviceslist ServiceName=fabric:/System/InfrastructureService/A expectempty=true
query getsystemserviceslist ServiceName=fabric:/System/InfrastructureService/B expectempty=true

-*

!q
