#
# This CIT covers the Creation of Instance/Replica Asyncronously
# This test covers the functionality of how the Instances/Replicas be created.
# When we create a service we register the service type in AppHost and the reply msg for RegisterServiceType
# is dropped using Unreliable transport for RequestReply, so the validation of the ServiceType doesnot happen
# and the replicas and instances are in InBuild/Dropped state. The operations to create instance/replica is
# asyncronous so, after we remove the behavior the replicas/instances should transition to Ready state.

# Set the config to use Unreliable transport for RequestReply over IPC
set UseUnreliableForRequestReply true

votes 10 
cmservice 1 1
fmservice 1 1
namingservice 1 1 1
cleantest

+10 
+20 
+30 
verify

# Drop the Reply for RegisterServiceType message
addbehavior b1 * * RegisterServiceTypeReply 1.0

#
#create app and a stateless, stateful service
#
app.add version10 TestApp 1.0
app.clear version10
app.servicepack version10 ServicePackageA version=1.0
app.servicepack version10 ServicePackageB version=1.0
app.servicetypes version10 ServicePackageA ServiceTypeA1 stateless
app.servicetypes version10 ServicePackageB ServiceTypeB1 stateful
app.codepack version10 ServicePackageA CodeA1 types=ServiceTypeA1 version=1.0
app.codepack version10 ServicePackageB CodeB1 types=ServiceTypeB1 version=1.0
app.upload version10
provisionapp version10
createapp fabric:/app1 TestApp 1.0 
verify

#Create a stateless service
createservice fabric:/app1/ServiceA1 ServiceTypeA1 n 1 3 appname=fabric:/app1
createservice fabric:/app1/ServiceA2 ServiceTypeA1 n 1 3 appname=fabric:/app1

#All the instances and replicas should be in InBuild/Dropped state
!waitforstate FM.Replica.State.fabric:/app1/ServiceA1.10 InBuild
!waitforstate FM.Replica.State.fabric:/app1/ServiceA1.20 InBuild
!waitforstate FM.Replica.State.fabric:/app1/ServiceA1.30 InBuild

!waitforstate FM.Replica.State.fabric:/app1/ServiceA2.10 InBuild
!waitforstate FM.Replica.State.fabric:/app1/ServiceA2.20 InBuild
!waitforstate FM.Replica.State.fabric:/app1/ServiceA2.30 InBuild

#Create a stateful service
createservice fabric:/app1/ServiceB1 ServiceTypeB1 y 1 3 appname=fabric:/app1
createservice fabric:/app1/ServiceB2 ServiceTypeB1 y 1 3 appname=fabric:/app1

!waitforstate FM.Replica.State.fabric:/app1/ServiceB1.30 Dropped|InBuild
!waitforstate FM.Replica.State.fabric:/app1/ServiceB1.20 Dropped|InBuild
!waitforstate FM.Replica.State.fabric:/app1/ServiceB1.10 Dropped|InBuild

!waitforstate FM.Replica.State.fabric:/app1/ServiceB2.30 Dropped|InBuild
!waitforstate FM.Replica.State.fabric:/app1/ServiceB2.20 Dropped|InBuild
!waitforstate FM.Replica.State.fabric:/app1/ServiceB2.10 Dropped|InBuild

!pause,10

#Remove the behavior to drop RegisterServiceType message reply
removebehavior b1

#
#All the replicas and instances should be ready 

!waitforstate FM.Replica.State.fabric:/app1/ServiceA1.10 Ready
!waitforstate FM.Replica.State.fabric:/app1/ServiceA1.20 Ready
!waitforstate FM.Replica.State.fabric:/app1/ServiceA1.30 Ready

!waitforstate FM.Replica.State.fabric:/app1/ServiceA2.10 Ready
!waitforstate FM.Replica.State.fabric:/app1/ServiceA2.20 Ready
!waitforstate FM.Replica.State.fabric:/app1/ServiceA2.30 Ready

!waitforstate FM.Replica.State.fabric:/app1/ServiceB1.30 Ready
!waitforstate FM.Replica.State.fabric:/app1/ServiceB1.20 Ready
!waitforstate FM.Replica.State.fabric:/app1/ServiceB1.10 Ready

!waitforstate FM.Replica.State.fabric:/app1/ServiceB2.30 Ready
!waitforstate FM.Replica.State.fabric:/app1/ServiceB2.20 Ready
!waitforstate FM.Replica.State.fabric:/app1/ServiceB2.10 Ready

verify

#
#Add an adhoc stateless service
#The instances should be Ready without being stuck in InBuild/Dropped state waiting for validation 
createservice fabric:/stateless CalculatorServiceType n 1 3
verify

#
# Add an adhoc stateful service
#The replicas should be Ready without being stuck in InBuild/Dropped state waiting for validation 

createservice fabric:/stateful TestStoreServiceType y 2 2
verify

!q